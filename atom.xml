<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[jubilee]]></title>
  <link href="http://mzgk.github.io/atom.xml" rel="self"/>
  <link href="http://mzgk.github.io/"/>
  <updated>2014-08-14T20:38:15+09:00</updated>
  <id>http://mzgk.github.io/</id>
  <author>
    <name><![CDATA[mzgk]]></name>
    <email><![CDATA[mzgkworks@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[セルに追加したボタンの処理をViewControllerで行う]]></title>
    <link href="http://mzgk.github.io/blog/2014/handle-button-in-cell/"/>
    <updated>2014-08-14T20:11:37+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/handle-button-in-cell</id>
    <content type="html"><![CDATA[<p>カスタムセルに追加したボタンの処理を、ViewControllerで行う方法。<br/>
タップされたボタンのセルのインデックスの取得。</p>

<h2>Cell</h2>

<ol>
<li>StoryBoard上でセル内にボタンを追加する</li>
<li>Attribute inspector &ndash; view &ndash; Tag に値を設定する</li>
<li>Outlet接続のみ行う（不要かも）</li>
</ol>


<h2>ViewController</h2>

<h3>ボタンのプロパティを宣言</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UIButton</span> <span class="o">*</span><span class="n">button</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ボタンとタップ時の処理を作成する</h3>

<p>任意の場所で。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// Cellにボタンを設定した時のTag値</span>
</span><span class='line'><span class="n">_button</span> <span class="o">=</span> <span class="p">(</span><span class="n">UIButton</span><span class="o">*</span><span class="p">)[</span><span class="n">cell</span> <span class="nl">viewWithTag:</span><span class="mi">1</span><span class="p">];</span>
</span><span class='line'><span class="c1">// ボタンのイベントを登録</span>
</span><span class='line'><span class="p">[</span><span class="n">_button</span> <span class="nl">addTarget:</span><span class="n">self</span> <span class="nl">action:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">buttonTapped:event:</span><span class="p">)</span> <span class="nl">forControlEvents:</span><span class="n">UIControlEventTouchUpInside</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h3>タップ時の処理</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">buttonTapped:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="nf">event:</span><span class="p">(</span><span class="n">UIEvent</span><span class="o">*</span><span class="p">)</span><span class="nv">event</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// タップされたボタンのセルインデックスを取得する</span>
</span><span class='line'>    <span class="n">UITouch</span> <span class="o">*</span><span class="n">touch</span> <span class="o">=</span> <span class="p">[[</span><span class="n">event</span> <span class="n">allTouches</span><span class="p">]</span><span class="n">anyObject</span><span class="p">];</span>
</span><span class='line'>    <span class="n">CGPoint</span> <span class="n">point</span> <span class="o">=</span> <span class="p">[</span><span class="n">touch</span> <span class="nl">locationInView:</span><span class="n">_sampleTableView</span><span class="p">];</span>
</span><span class='line'>    <span class="n">_tappedIndexPath</span> <span class="o">=</span> <span class="p">[</span><span class="n">_sampleTableView</span> <span class="nl">indexPathForRowAtPoint:</span><span class="n">point</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 実行したい処理</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<ul>
<li><a href="http://cocoadays.blogspot.jp/2011/06/ios-uinib-uitableviewcell_26.html">http://cocoadays.blogspot.jp/2011/06/ios-uinib-uitableviewcell_26.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[指定したセルの表示更新を行う]]></title>
    <link href="http://mzgk.github.io/blog/2014/update-selected-cell/"/>
    <updated>2014-08-14T20:09:55+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/update-selected-cell</id>
    <content type="html"><![CDATA[<p>特定のセルのみの表示更新を行いたい場合の方法。<br/>
以下のようなパターンで必要になった。</p>

<ol>
<li>セルをスワイプして削除ボタンを表示し、削除ボタンをタップ</li>
<li>セル内のデータに基づく内部データを処理（セル自体は削除したくない）</li>
<li>削除ボタンが消せない（reloadData）</li>
<li>セルのみ更新をしたい</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">commitEditingStyle:</span><span class="p">(</span><span class="n">UITableViewCellEditingStyle</span><span class="p">)</span><span class="nv">editingStyle</span> <span class="nf">forRowAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">editingStyle</span> <span class="o">==</span> <span class="n">UITableViewCellEditingStyleDelete</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// セルの削除ボタンでしたい処理</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>        <span class="c1">// 処理したセルの更新↓↓↓</span>
</span><span class='line'>        <span class="n">NSArray</span> <span class="o">*</span><span class="n">indexPaths</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nl">arrayWithObject:</span><span class="n">indexPath</span><span class="p">];</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">tableView</span> <span class="nl">reloadRowsAtIndexPaths:</span><span class="n">indexPaths</span> <span class="nl">withRowAnimation:</span><span class="n">UITableViewRowAnimationRight</span><span class="p">];</span>
</span><span class='line'>        <span class="c1">// ↑↑↑</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">editingStyle</span> <span class="o">==</span> <span class="n">UITableViewCellEditingStyleInsert</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>更新時のアニメーション</h2>

<ul>
<li>UITableViewRowAnimationFade</li>
<li>UITableViewRowAnimationRight</li>
<li>UITableViewRowAnimationLeft</li>
<li>UITableViewRowAnimationTop</li>
<li>UITableViewRowAnimationBottom</li>
<li>UITableViewRowAnimationNone</li>
<li>UITableViewRowAnimationMiddle</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIImageView内に表示する画像の表示モード]]></title>
    <link href="http://mzgk.github.io/blog/2014/uiimageview-contentmode/"/>
    <updated>2014-08-14T20:09:19+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/uiimageview-contentmode</id>
    <content type="html"><![CDATA[<p>UIImageView内に表示する画像の表示モードを指定する方法。</p>

<h2>指定方法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">_imageView</span><span class="p">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="n">UIViewContentModeCenter</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>モード</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">typedef</span> <span class="nf">NS_ENUM</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">,</span> <span class="n">UIViewContentMode</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">UIViewContentModeScaleToFill</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIViewContentModeScaleAspectFit</span><span class="p">,</span>      <span class="c1">// contents scaled to fit with fixed aspect. remainder is transparent</span>
</span><span class='line'>    <span class="n">UIViewContentModeScaleAspectFill</span><span class="p">,</span>     <span class="c1">// contents scaled to fill with fixed aspect. some portion of content may be clipped.</span>
</span><span class='line'>    <span class="n">UIViewContentModeRedraw</span><span class="p">,</span>              <span class="c1">// redraw on bounds change (calls -setNeedsDisplay)</span>
</span><span class='line'>    <span class="n">UIViewContentModeCenter</span><span class="p">,</span>              <span class="c1">// contents remain same size. positioned adjusted.</span>
</span><span class='line'>    <span class="n">UIViewContentModeTop</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIViewContentModeBottom</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIViewContentModeLeft</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIViewContentModeRight</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIViewContentModeTopLeft</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIViewContentModeTopRight</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIViewContentModeBottomLeft</span><span class="p">,</span>
</span><span class='line'>    <span class="n">UIViewContentModeBottomRight</span><span class="p">,</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アプリの標準言語を日本語のみにする方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/localization-japanese-only/"/>
    <updated>2014-08-12T17:39:06+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/localization-japanese-only</id>
    <content type="html"><![CDATA[<p>日本国内のみの配布などで、アプリの標準言語を日本語のみにする設定する方法。<br/>
アプリ作成時のデフォルトは英語になっており、UIImagePickerなどを使用してカメラ機能を実装した場合には、Cancel / Retakeなど英語で表示がされる。 これを日本語に変える。
ただし、通常のlocalization対応と違い日本語オンリーにする対応。</p>

<h2>Localization native development</h2>

<ol>
<li>プロジェクトナビゲーターでプロジェクトを選択 &ndash; Target &ndash; Infoを開く</li>
<li>Localization native development region &ndash; en → Japanに変更する
<img src="http://mzgk.github.io/images/2014/0812/localization-1.png" alt="localization-1" /></li>
</ol>


<h2>Localizations</h2>

<ol>
<li>上記の設定後に、そのままの場所で右クリック → Add Row</li>
<li>Keyに「Localizations」を追加する</li>
<li>Item0を選択し、Valueの値を「Japanese」に変更する
<img src="http://mzgk.github.io/images/2014/0812/localization-2.png" alt="localization-2" /></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[viewのサイズを変更する方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/change-view-frame/"/>
    <updated>2014-08-12T16:53:42+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/change-view-frame</id>
    <content type="html"><![CDATA[<p>viewのサイズを変更する方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 高さを変更</span>
</span><span class='line'><span class="n">CGRect</span> <span class="n">newRect</span> <span class="o">=</span> <span class="n">_sampleView</span><span class="p">.</span><span class="n">frame</span><span class="p">;</span>
</span><span class='line'><span class="n">newRect</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">=</span> <span class="mf">165.0f</span><span class="p">;</span>
</span><span class='line'><span class="p">[</span><span class="n">_sampleView</span> <span class="nl">setFrame:</span><span class="n">newRect</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIScrollViewに配置したViewが下にズレる時の対応]]></title>
    <link href="http://mzgk.github.io/blog/2014/uiscrollview-checkpoint-2/"/>
    <updated>2014-08-12T16:44:48+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/uiscrollview-checkpoint-2</id>
    <content type="html"><![CDATA[<p>NavigationBarなどが存在し、UIScrollViewの上にviewを配置した画面の場合に、ビルドして確認するとviewが下にズレて表示されることがある。</p>

<h2>ViewController &ndash; Attribute inspector</h2>

<p>このときは、ViewControllerのAttribute inspector &ndash; Adjubst Scroll View Insets　のチェックを外す。<br/>
<code>automaticallyAdjustsScrollViewInsets = NO</code></p>

<p><img src="http://mzgk.github.io/images/2014/0812/attribute-inspector.png" alt="inspector" /></p>

<h2>参考</h2>

<ul>
<li><a href="http://www.slideshare.net/YoshinoriImajo/ios7-30039408">http://www.slideshare.net/YoshinoriImajo/ios7-30039408</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIScrollViewをスクロールさせる方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/uiscrollview-checkpoint1/"/>
    <updated>2014-08-12T16:32:58+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/uiscrollview-checkpoint1</id>
    <content type="html"><![CDATA[<p>UIScrollViewを設定したのに、スクロールしない時は以下を確認する。</p>

<h2>contentSize</h2>

<ul>
<li>UIScrollViewのconntentSizeをUIScrollViewの大きさよりも、大きくしているか？</li>
<li>conntentSizeをセットするタイミング</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// このタイミングで行う</span>
</span><span class='line'><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLayoutSubviews</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// UIScrollView:320,568で作成済み</span>
</span><span class='line'>    <span class="p">[</span><span class="n">_sceneScrollView</span> <span class="nl">setContentSize:</span><span class="n">CGSizeMake</span><span class="p">(</span><span class="mi">320</span><span class="p">,</span><span class="mi">680</span><span class="p">)];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<p><a href="http://blog.livedoor.jp/manjumanju/archives/3323842.html">http://blog.livedoor.jp/manjumanju/archives/3323842.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneのスクリーンサイズを調べる方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/check-screensize/"/>
    <updated>2014-08-12T16:15:35+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/check-screensize</id>
    <content type="html"><![CDATA[<p>iPhone・iPadなどのスクリーンサイズを調べる方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 3.5インチかどうかの判断</span>
</span><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">isSmallSizeScreen</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">CGSize</span> <span class="n">screenSize</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIScreen</span> <span class="n">mainScreen</span><span class="p">]</span><span class="n">bounds</span><span class="p">].</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">screenSize</span><span class="p">.</span><span class="n">height</span> <span class="o">==</span> <span class="mf">480.0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アプリの起動イメージを指定時間表示する方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/launch-image/"/>
    <updated>2014-08-11T16:59:06+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/launch-image</id>
    <content type="html"><![CDATA[<p>アプリの起動イメージを表示する時間を制御する方法。<br/>
<code>AppDelegate.m</code> のアプリ起動時処理部分に、スレッドをスリープさせるコードを追記する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">application:</span><span class="p">(</span><span class="n">UIApplication</span> <span class="o">*</span><span class="p">)</span><span class="nv">application</span> <span class="nf">didFinishLaunchingWithOptions:</span><span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nv">launchOptions</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>    <span class="p">...</span>
</span><span class='line'>    <span class="c1">// 2秒間停止する</span>
</span><span class='line'>    <span class="p">[</span><span class="n">NSThread</span> <span class="nl">sleepForTimeInterval:</span><span class="mf">2.0</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アプリ内のフォントを統一させる方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/font-standardize/"/>
    <updated>2014-08-11T15:05:04+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/font-standardize</id>
    <content type="html"><![CDATA[<p>アプリ内のフォントを統一させる方法。<br/>
今回は、カスタムフォントとして「Rounded-L M+ 2p regular」を使用。</p>

<h2>プロジェクトへフォントを追加する</h2>

<p>Xcodeを開き、追加したいフォントファイルをドラッグ＆ドロップ（または、右クリック等から&#8221;Add Files to 〜&#8221;）で、ファイルをプロジェクトに追加する。<br/>
<img src="http://mzgk.github.io/images/2014/0811/add-fontfile.png" alt="add fontfile" /></p>

<h2>.plistへの情報追加</h2>

<p>Supporting Files &ndash;> プロジェクト名.plistへ追加したフォントの情報を追加する。<br/>
<code>Fonts provided by application</code> &ndash;> item0 にフォントの「PostScript 名」を記述する。<br/>
※PostScript名は、FontBook.appを起動し、対象フォントのinfoボタンから確認<br/>
<img src="http://mzgk.github.io/images/2014/0811/add-plist.png" alt="plist" /></p>

<h2>AppDelegate.m</h2>

<p><code>AppDelegate.m</code> の <code>didFinishLaunchingWithOptions:</code> 等で、<code>appearance</code> を使い設定する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// フォント</span>
</span><span class='line'><span class="n">UIFont</span> <span class="o">*</span><span class="n">baseInputFont</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIFont</span> <span class="nl">fontWithName:</span><span class="s">@&quot;rounded-l-mplus-2p-regular&quot;</span> <span class="nl">size:</span><span class="mf">16.0f</span><span class="p">];</span>
</span><span class='line'><span class="n">UIFont</span> <span class="o">*</span><span class="n">baseTitleFont</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIFont</span> <span class="nl">fontWithName:</span><span class="s">@&quot;rounded-l-mplus-2p-regular&quot;</span> <span class="nl">size:</span><span class="mf">18.0f</span><span class="p">];</span>
</span><span class='line'><span class="c1">// フォント・カラー</span>
</span><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">barItemInfo</span> <span class="o">=</span> <span class="err">@</span><span class="p">{</span><span class="n">NSFontAttributeName</span> <span class="o">:</span> <span class="n">baseTitleFont</span><span class="p">,</span> <span class="nl">NSForegroundColorAttributeName:</span><span class="p">[</span><span class="n">UIColor</span> <span class="n">whiteColor</span><span class="p">]};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// UILabel</span>
</span><span class='line'><span class="p">[[</span><span class="n">UILabel</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setFont:</span><span class="n">baseInputFont</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// UINavigationBar</span>
</span><span class='line'><span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setTitleTextAttributes:</span><span class="n">barItemInfo</span><span class="p">];</span>
</span><span class='line'><span class="p">[[</span><span class="n">UINavigationBar</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setBarTintColor:</span><span class="p">[</span><span class="n">UIColor</span> <span class="nl">colorWithRed:</span><span class="mf">0.2</span> <span class="nl">green:</span><span class="mf">0.6</span> <span class="nl">blue:</span><span class="mf">0.86</span> <span class="nl">alpha:</span><span class="mi">1</span><span class="p">]];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// UINavigationBarItem</span>
</span><span class='line'><span class="p">[[</span><span class="n">UIBarButtonItem</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setTitleTextAttributes:</span><span class="n">barItemInfo</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// UITextField</span>
</span><span class='line'><span class="p">[[</span><span class="n">UITextField</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setFont:</span><span class="n">baseInputFont</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// UITextView</span>
</span><span class='line'><span class="p">[[</span><span class="n">UITextView</span> <span class="n">appearance</span><span class="p">]</span> <span class="nl">setFont:</span><span class="n">baseInputFont</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>参考</h2>

<ul>
<li><a href="http://dev.classmethod.jp/smartphone/iphone/uifont-packagesetup/">http://dev.classmethod.jp/smartphone/iphone/uifont-packagesetup/</a></li>
<li><a href="http://qiita.com/yimajo/items/a7ed557d382077498181">http://qiita.com/yimajo/items/a7ed557d382077498181</a></li>
<li><a href="http://seesaakyoto.seesaa.net/article/366291271.html">http://seesaakyoto.seesaa.net/article/366291271.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ViewControllerでアプリの状態を検知する]]></title>
    <link href="http://mzgk.github.io/blog/2014/viewcontroller-notification/"/>
    <updated>2014-08-08T15:52:13+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/viewcontroller-notification</id>
    <content type="html"><![CDATA[<p>ViewControllerで、バックグラウンドから復帰した際の処理をしたかったが、検知できる方法がAppDelegate.mの <code>applicationWillEnterForeground:</code> 以外に思いつかなかったので調査。<br/>
結果としては、ViewControllerでもアプリの状態を検知する方法があった。</p>

<h2>通知を利用する</h2>

<p>ViewController.mの <code>viewWillAppear</code> などに、通知を追加しておく。</p>

<h3>追加</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewWillAppear:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">animated</span>
</span><span class='line'>    <span class="c1">// UIApplicationDidBecomeActiveNotification：アクティブになったとき</span>
</span><span class='line'>    <span class="c1">// applicationDidBecomeActive（自作）メソッドを呼ぶ</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nl">addObserver:</span><span class="n">self</span>
</span><span class='line'>                                             <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="n">applicationDidBecomeActive</span><span class="p">)</span>
</span><span class='line'>                                                 <span class="nl">name:</span><span class="n">UIApplicationDidBecomeActiveNotification</span>
</span><span class='line'>                                               <span class="nl">object:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>削除</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewWillDisappear:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">animated</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 通知の削除</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">NSNotificationCenter</span> <span class="n">defaultCenter</span><span class="p">]</span> <span class="nl">removeObserver:</span><span class="n">self</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>状態一覧</h2>

<p>UIApplicationのNotifications一覧</p>

<h3>ライフサイクル系</h3>

<ul>
<li>UIApplicationDidFinishLaunchingNotification

<ul>
<li>アプリケーションが起動した直後に通知</li>
</ul>
</li>
<li>UIApplicationWillEnterForegroundNotification

<ul>
<li>アプリケーションがアクティブになる直前に通知</li>
</ul>
</li>
<li>UIApplicationDidBecomeActiveNotification

<ul>
<li>アプリケーションがアクティブになった時に通知</li>
</ul>
</li>
<li>UIApplicationDidEnterBackgroundNotification

<ul>
<li>アプリケーションがバックグラウンドに入る時に通知</li>
</ul>
</li>
<li>UIApplicationWillResignActiveNotification

<ul>
<li>アプリケーションがアクティブで無くなる直前に通知。通知アラートが表示される時などにも通知される</li>
</ul>
</li>
<li>UIApplicationWillTerminateNotification

<ul>
<li>アプリケーションが終了される直前に通知</li>
</ul>
</li>
</ul>


<h3>サイズ変更系</h3>

<ul>
<li>UIApplicationWillChangeStatusBarFrameNotification

<ul>
<li>ステータスバーのサイズ変更される直前に通知</li>
</ul>
</li>
<li>UIApplicationDidChangeStatusBarFrameNotification

<ul>
<li>ステータスバーのサイズ変更が発生した時に通知。デバイスが回転した時など</li>
</ul>
</li>
<li>UIApplicationWillChangeStatusBarOrientationNotification

<ul>
<li>デバイスの向きが変わる直前に通知</li>
</ul>
</li>
<li>UIApplicationDidChangeStatusBarOrientationNotification

<ul>
<li>デバイスの向きが変わった後に通知</li>
</ul>
</li>
</ul>


<h3>その他</h3>

<ul>
<li>UIApplicationDidReceiveMemoryWarningNotification

<ul>
<li>メモリ不足の警告発生時に通知</li>
</ul>
</li>
<li>UIApplicationProtectedDataDidBecomeAvailable

<ul>
<li>保護されたファイルへコードからアクセスが可能になった時に通知</li>
</ul>
</li>
<li>UIApplicationProtectedDataWillBecomeUnavailable

<ul>
<li>保護されたファイルへコードからアクセス出来なくなる前に通知</li>
</ul>
</li>
<li>UIApplicationSignificantTimeChangeNotification

<ul>
<li>時間に大きな変更が有った場合に通知。日付が変わった時や夏時間に変更など</li>
</ul>
</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://qiita.com/hkomo746/items/22fcecfd0773023ed56a">http://qiita.com/hkomo746/items/22fcecfd0773023ed56a</a></li>
<li><a href="http://d.hatena.ne.jp/nakamura001/20111107/1320680842">http://d.hatena.ne.jp/nakamura001/20111107/1320680842</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[プッシュ通知の誤解]]></title>
    <link href="http://mzgk.github.io/blog/2014/push-notification/"/>
    <updated>2014-08-07T13:25:29+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/push-notification</id>
    <content type="html"><![CDATA[<p>アプリがバックグラウンド状態で、サーバーからプッシュ通知を受信した際の動作で、自分が誤解していたこと。<br/>
実機繋げてデバッグ実行中に、バックグラウンドにいる状態では処理が動いている形跡がないので、おかしいな〜と。<br/>
Apple公式の「LocalおよびPush Notificationプログラミングガイド」を確認したら、P14に記載されてた。</p>

<h3>誤り</h3>

<ol>
<li>サーバーからプッシュ通知を受信</li>
<li>アプリが通知を受信し、アプリがバックグラウンドでアイコンバッジ表示や受信を契機にした処理を行う（自分でコーディング）</li>
</ol>


<h3>正しくは</h3>

<ol>
<li>サーバーからプッシュ通知を受信</li>
<li>OSが通知を受信し、メッセージを表示（アイコンバッジはサーバーからの指示でOSが表示）</li>
<li>ユーザーがアプリを起動し、受け取った通知をもとに処理を行う（自分でコーディング）</li>
</ol>


<h3>注意</h3>

<ul>
<li>アプリが完全に終了している時で、通知受信後にメッセージセンターからではなく、アプリのアイコンから起動した場合は、受信データを受け取ることができない</li>
<li>通知センターから起動とアプリアイコンから起動では、動作がちがう</li>
<li>バックグラウンドで処理をしたい場合は、サーバーからの通知ペイロードに <code>content-available=1</code> を含むこと</li>
<li>TARGETS &ndash; Background Models &ndash; Remote notifications, (Background fetch)にチェック</li>
<li>UIRemoteNotificationTypeNewsstandContentAvailability指定するとバッジがでない</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/shu223/20140113/1389612563">http://d.hatena.ne.jp/shu223/20140113/1389612563</a></li>
<li><a href="http://blog.techfirm.co.jp/2013/10/11/ios-7-remote-notification%E3%81%AE%E6%8C%99%E5%8B%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/">http://blog.techfirm.co.jp/2013/10/11/ios-7-remote-notification%E3%81%AE%E6%8C%99%E5%8B%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</a></li>
<li><a href="http://himaratsu.hatenablog.com/entry/objc/push">http://himaratsu.hatenablog.com/entry/objc/push</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoaPodsでライセンス表記を自動で作成する]]></title>
    <link href="http://mzgk.github.io/blog/2014/cocoapods-license-auto-make/"/>
    <updated>2014-08-06T13:52:05+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/cocoapods-license-auto-make</id>
    <content type="html"><![CDATA[<p>CocoaPodsを使用している場合に、使用しているライブラリのライセンス表記を自動で作成する方法。<br/>
ライセンス表記は、iPhoneの設定アプリに作成される。<br/>
<code>pod install / pod update</code> するたびに自動作成してくれるので、ライブラリの追加／削除のたびにライセンス表記の修正をしなくていいので便利。 <br/>
作成時に、些細なところでハマったので、やり方を残しておく。</p>

<h2>Settings.bundleを作成</h2>

<p>File &ndash; New &ndash; File から、iOS &ndash; Resource で「Settings Bundle」を選択。
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-1.png" alt="settingbundle1" /></p>

<p>作成する場所を選択する。<br/>
ここで、Groupを「Supporting Files」にはしないこと。　←　ここでハマった。
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-2.png" alt="settingbundle2" /></p>

<h2>Root.plistの編集</h2>

<p>デフォルトの状態から、以下のように編集する。<br/>
「Child Pane」は、「Type」からしか選択はできないので注意。<br/>
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-3.png" alt="root.plist" /></p>

<h2>Acknowledgements.plistの作成</h2>

<p>「Settings.bundle」内に「Acknowledgements.plist」を作成する。<br/>
作成方法は通常のファイル作成と違い、以下のようにする。</p>

<ul>
<li>「Settings.bundle」を右クリックで「パッケージの内容を表示」させ</li>
<li>「Root.plist」を複製し、「Acknowledgements.plist」に名前をかえる</li>
<li>「Acknowledgements.plist」を開き（エディタなど）、中身を消す　←　ここでもハマった。</li>
</ul>


<p><img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-4.png" alt="Acknowledgements.plist" /></p>

<h2>Podfileへの追加</h2>

<p>Podfileへ、以下を追加する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>post_install do | installer |
</span><span class='line'>require 'fileutils'
</span><span class='line'>FileUtils.cp_r('Pods/Pods-acknowledgements.plist', 'SampleLicense/Settings.bundle/Acknowledgements.plist', :remove_destination =&gt; true)
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p><code>Settings.bundle</code> へのパスは、XcodeでSettings.bundleを表示させ、エディタエリア上部のジャンプバーを参照すること。<br/>
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-5.png" alt="Podfile" /></p>

<h2>pod install</h2>

<p>あとは、<code>pod install</code> をすれば、完成。Acknowledgements.plistはこんな感じになる。<br/>
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-6.png" alt="Acknowledgements.plist" /></p>

<p>ビルドし、iPhoneの設定アプリから確認することができる。<br/>
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-7.png" alt="Setting.app" />
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-8.png" alt="Setting.app" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] 文字の高さを指定する]]></title>
    <link href="http://mzgk.github.io/blog/2014/css-line-height/"/>
    <updated>2014-08-05T19:30:03+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/css-line-height</id>
    <content type="html"><![CDATA[<p>font-sizeで指定した文字の大きさに対し、上下にどれくらいの余裕を持たせるかを指定するline-heightの指定のしかた。<br/>
このline-heightプロパティの値はpxではなく、文字サイズに対する割合で指定する。</p>

<p>(font-size + 上余白 + 下余白) / font-size = line-heightの値（小数点4位切り上げ）</p>

<p>例えば、<br/>
文字サイズ16pxで上下に3pxずつ余裕をもたせる場合<br/>
(16 + 3 + 3) / 16 = 1.375</p>

<p>文字サイズ14pxで上下に3pxずつ余裕をもたせる場合<br/>
(14 + 3 + 3) / 14 = 1.42857&hellip; &ndash;> 1.429</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacのDigitalColor Materで色の値をコピーする]]></title>
    <link href="http://mzgk.github.io/blog/2014/digitalcolor-mater/"/>
    <updated>2014-08-05T19:26:44+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/digitalcolor-mater</id>
    <content type="html"><![CDATA[<p>Mac標準のカラーピッカーである『DigitalColor Mater』。<br/>
このアプリで色をピックした際にカラー値を16進数で取得したいんだけど、どこに値が表示されるのかわからなかった。</p>

<p>メニュー &ndash;> カラー &ndash;> カラーをテキストでコピー（Shift + Cmd + C）</p>

<p>これで、16進数での値を取得できる。
あとは、挿入したい場所にペースト（Cmd + v）するだけ。</p>

<h3>おまけ</h3>

<p>アプリなら、Objective-CのUIColorの値も設定できる「Sip」がおすすめ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git / GitHubからいらないファイルを削除する]]></title>
    <link href="http://mzgk.github.io/blog/2014/remove-file-from-github/"/>
    <updated>2014-08-05T19:22:41+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/remove-file-from-github</id>
    <content type="html"><![CDATA[<p>GitHubに誤ってプッシュした、またはいらなくなったファイルを削除する方法。<br/>
ワーキングエリア（作業ディレクトリ）からも削除する方法と、残す方法。</p>

<h2>削除方法</h2>

<p>ローカルで対象のファイルを削除し（ステージングエリアから）、コミット後にプッシュ。</p>

<h3>1. ローカルファイルを削除</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git rm ファイル名</span></code></pre></td></tr></table></div></figure>


<p>※ただしこれだと、ワーキングエリアからも削除されてしまう。<br/>
ワーキングエリアには残しておき、Git管理対象外としたい場合は、.gitignoreに追記し</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git rm --cached ファイル名</span></code></pre></td></tr></table></div></figure>


<h3>2. ステージング</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git add .</span></code></pre></td></tr></table></div></figure>


<h3>3. コミット</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git commit -m "メッセージ"</span></code></pre></td></tr></table></div></figure>


<h3>4. プッシュ</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git push</span></code></pre></td></tr></table></div></figure>


<p>※以前に  <code>push -u</code> していない場合は、宛先が必要</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macでゴミ箱からファイルを削除できない時の方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/empty-trash/"/>
    <updated>2014-08-05T19:19:35+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/empty-trash</id>
    <content type="html"><![CDATA[<p>Macでゴミ箱を空にしようとしても、「ファイルを使用中のため削除できません」が
表示された時でも、確実に削除する方法。</p>

<ol>
<li>ゴミ箱をCmd + 右クリック<br/>
「確実にゴミ箱を空にする」を選択。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[marginの記法]]></title>
    <link href="http://mzgk.github.io/blog/2014/margin/"/>
    <updated>2014-08-05T19:15:54+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/margin</id>
    <content type="html"><![CDATA[<p>marginの省略記法</p>

<p>marginの値を省略してコーディングした時の意味合い。</p>

<p>margin: 0;  →  （上下左右）<br/>
margin: 0 0;  →  （上下）（左右）<br/>
margin: 0 0 0;  →  （上）（左右）（下）<br/>
margin: 0 0 0 0;  →  （上）（右）（下）（左）※時計回り</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableViewのカスタマイズ方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/customize-uitableview/"/>
    <updated>2014-08-05T19:04:52+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/customize-uitableview</id>
    <content type="html"><![CDATA[<p>UITableViewをカスタマイズする方法。</p>

<p><img src="http://mzgk.github.io/images/2014/0805/UITableView.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Alfredで自分の作成したファイル等を検索結果として表示させない方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/alfred-setting/"/>
    <updated>2014-08-05T18:59:47+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/alfred-setting</id>
    <content type="html"><![CDATA[<p>Alfredの検索リストに自分が作成したファイルや連絡先を表示させないためには、以下を確認。</p>

<p><img src="http://mzgk.github.io/images/2014/0805/Alfred.png" alt="Alfred" /></p>
]]></content>
  </entry>
  
</feed>
