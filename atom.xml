<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[jubilee]]></title>
  <link href="http://mzgk.github.io/atom.xml" rel="self"/>
  <link href="http://mzgk.github.io/"/>
  <updated>2014-08-07T13:31:25+09:00</updated>
  <id>http://mzgk.github.io/</id>
  <author>
    <name><![CDATA[mzgk]]></name>
    <email><![CDATA[mzgkworks@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[プッシュ通知の誤解]]></title>
    <link href="http://mzgk.github.io/blog/2014/push-notification/"/>
    <updated>2014-08-07T13:25:29+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/push-notification</id>
    <content type="html"><![CDATA[<p>アプリがバックグラウンド状態で、サーバーからプッシュ通知を受信した際の動作で、自分が誤解していたこと。<br/>
実機繋げてデバッグ実行中に、バックグラウンドにいる状態では処理が動いている形跡がないので、おかしいな〜と。<br/>
Apple公式の「LocalおよびPush Notificationプログラミングガイド」を確認したら、P14に記載されてた。</p>

<h3>誤り</h3>

<ol>
<li>サーバーからプッシュ通知を受信</li>
<li>アプリが通知を受信し、アプリがバックグラウンドでアイコンバッジ表示や受信を契機にした処理を行う（自分でコーディング）</li>
</ol>


<h3>正しくは</h3>

<ol>
<li>サーバーからプッシュ通知を受信</li>
<li>OSが通知を受信し、メッセージを表示（アイコンバッジはサーバーからの指示でOSが表示）</li>
<li>ユーザーがアプリを起動し、受け取った通知をもとに処理を行う（自分でコーディング）</li>
</ol>


<p>参考：とても助かりました。<br/>
<a href="http://himaratsu.hatenablog.com/entry/objc/push">http://himaratsu.hatenablog.com/entry/objc/push</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoaPodsでライセンス表記を自動で作成する]]></title>
    <link href="http://mzgk.github.io/blog/2014/cocoapods-license-auto-make/"/>
    <updated>2014-08-06T13:52:05+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/cocoapods-license-auto-make</id>
    <content type="html"><![CDATA[<p>CocoaPodsを使用している場合に、使用しているライブラリのライセンス表記を自動で作成する方法。<br/>
ライセンス表記は、iPhoneの設定アプリに作成される。<br/>
<code>pod install / pod update</code> するたびに自動作成してくれるので、ライブラリの追加／削除のたびにライセンス表記の修正をしなくていいので便利。 <br/>
作成時に、些細なところでハマったので、やり方を残しておく。</p>

<h2>Settings.bundleを作成</h2>

<p>File &ndash; New &ndash; File から、iOS &ndash; Resource で「Settings Bundle」を選択。
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-1.png" alt="settingbundle1" /></p>

<p>作成する場所を選択する。<br/>
ここで、Groupを「Supporting Files」にはしないこと。　←　ここでハマった。
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-2.png" alt="settingbundle2" /></p>

<h2>Root.plistの編集</h2>

<p>デフォルトの状態から、以下のように編集する。<br/>
「Child Pane」は、「Type」からしか選択はできないので注意。<br/>
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-3.png" alt="root.plist" /></p>

<h2>Acknowledgements.plistの作成</h2>

<p>「Settings.bundle」内に「Acknowledgements.plist」を作成する。<br/>
作成方法は通常のファイル作成と違い、以下のようにする。</p>

<ul>
<li>「Settings.bundle」を右クリックで「パッケージの内容を表示」させ</li>
<li>「Root.plist」を複製し、「Acknowledgements.plist」に名前をかえる</li>
<li>「Acknowledgements.plist」を開き（エディタなど）、中身を消す　←　ここでもハマった。</li>
</ul>


<p><img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-4.png" alt="Acknowledgements.plist" /></p>

<h2>Podfileへの追加</h2>

<p>Podfileへ、以下を追加する。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>post_install do | installer |
</span><span class='line'>require 'fileutils'
</span><span class='line'>FileUtils.cp_r('Pods/Pods-acknowledgements.plist', 'SampleLicense/Settings.bundle/Acknowledgements.plist', :remove_destination =&gt; true)
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p><code>Settings.bundle</code> へのパスは、XcodeでSettings.bundleを表示させ、エディタエリア上部のジャンプバーを参照すること。<br/>
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-5.png" alt="Podfile" /></p>

<h2>pod install</h2>

<p>あとは、<code>pod install</code> をすれば、完成。Acknowledgements.plistはこんな感じになる。<br/>
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-6.png" alt="Acknowledgements.plist" /></p>

<p>ビルドし、iPhoneの設定アプリから確認することができる。<br/>
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-7.png" alt="Setting.app" />
<img src="http://mzgk.github.io/images/2014/0806/cocoapods-license-8.png" alt="Setting.app" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CSS] 文字の高さを指定する]]></title>
    <link href="http://mzgk.github.io/blog/2014/css-line-height/"/>
    <updated>2014-08-05T19:30:03+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/css-line-height</id>
    <content type="html"><![CDATA[<p>font-sizeで指定した文字の大きさに対し、上下にどれくらいの余裕を持たせるかを指定するline-heightの指定のしかた。<br/>
このline-heightプロパティの値はpxではなく、文字サイズに対する割合で指定する。</p>

<p>(font-size + 上余白 + 下余白) / font-size = line-heightの値（小数点4位切り上げ）</p>

<p>例えば、<br/>
文字サイズ16pxで上下に3pxずつ余裕をもたせる場合<br/>
(16 + 3 + 3) / 16 = 1.375</p>

<p>文字サイズ14pxで上下に3pxずつ余裕をもたせる場合<br/>
(14 + 3 + 3) / 14 = 1.42857&hellip; &ndash;> 1.429</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacのDigitalColor Materで色の値をコピーする]]></title>
    <link href="http://mzgk.github.io/blog/2014/digitalcolor-mater/"/>
    <updated>2014-08-05T19:26:44+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/digitalcolor-mater</id>
    <content type="html"><![CDATA[<p>Mac標準のカラーピッカーである『DigitalColor Mater』。<br/>
このアプリで色をピックした際にカラー値を16進数で取得したいんだけど、どこに値が表示されるのかわからなかった。</p>

<p>メニュー &ndash;> カラー &ndash;> カラーをテキストでコピー（Shift + Cmd + C）</p>

<p>これで、16進数での値を取得できる。
あとは、挿入したい場所にペースト（Cmd + v）するだけ。</p>

<h3>おまけ</h3>

<p>アプリなら、Objective-CのUIColorの値も設定できる「Sip」がおすすめ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git / GitHubからいらないファイルを削除する]]></title>
    <link href="http://mzgk.github.io/blog/2014/remove-file-from-github/"/>
    <updated>2014-08-05T19:22:41+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/remove-file-from-github</id>
    <content type="html"><![CDATA[<p>GitHubに誤ってプッシュした、またはいらなくなったファイルを削除する方法。<br/>
ワーキングエリア（作業ディレクトリ）からも削除する方法と、残す方法。</p>

<h2>削除方法</h2>

<p>ローカルで対象のファイルを削除し（ステージングエリアから）、コミット後にプッシュ。</p>

<h3>1. ローカルファイルを削除</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git rm ファイル名</span></code></pre></td></tr></table></div></figure>


<p>※ただしこれだと、ワーキングエリアからも削除されてしまう。<br/>
ワーキングエリアには残しておき、Git管理対象外としたい場合は、.gitignoreに追記し</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git rm --cached ファイル名</span></code></pre></td></tr></table></div></figure>


<h3>2. ステージング</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git add .</span></code></pre></td></tr></table></div></figure>


<h3>3. コミット</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git commit -m "メッセージ"</span></code></pre></td></tr></table></div></figure>


<h3>4. プッシュ</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git push</span></code></pre></td></tr></table></div></figure>


<p>※以前に  <code>push -u</code> していない場合は、宛先が必要</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Macでゴミ箱からファイルを削除できない時の方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/empty-trash/"/>
    <updated>2014-08-05T19:19:35+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/empty-trash</id>
    <content type="html"><![CDATA[<p>Macでゴミ箱を空にしようとしても、「ファイルを使用中のため削除できません」が
表示された時でも、確実に削除する方法。</p>

<ol>
<li>ゴミ箱をCmd + 右クリック<br/>
「確実にゴミ箱を空にする」を選択。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[marginの記法]]></title>
    <link href="http://mzgk.github.io/blog/2014/margin/"/>
    <updated>2014-08-05T19:15:54+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/margin</id>
    <content type="html"><![CDATA[<p>marginの省略記法</p>

<p>marginの値を省略してコーディングした時の意味合い。</p>

<p>margin: 0;  →  （上下左右）<br/>
margin: 0 0;  →  （上下）（左右）<br/>
margin: 0 0 0;  →  （上）（左右）（下）<br/>
margin: 0 0 0 0;  →  （上）（右）（下）（左）※時計回り</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableViewのカスタマイズ方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/customize-uitableview/"/>
    <updated>2014-08-05T19:04:52+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/customize-uitableview</id>
    <content type="html"><![CDATA[<p>UITableViewをカスタマイズする方法。</p>

<p><img src="http://mzgk.github.io/images/2014/0805/UITableView.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Alfredで自分の作成したファイル等を検索結果として表示させない方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/alfred-setting/"/>
    <updated>2014-08-05T18:59:47+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/alfred-setting</id>
    <content type="html"><![CDATA[<p>Alfredの検索リストに自分が作成したファイルや連絡先を表示させないためには、以下を確認。</p>

<p><img src="http://mzgk.github.io/images/2014/0805/Alfred.png" alt="Alfred" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autolayout時の注意]]></title>
    <link href="http://mzgk.github.io/blog/2014/autolayout-point/"/>
    <updated>2014-08-05T18:56:40+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/autolayout-point</id>
    <content type="html"><![CDATA[<p>3.5inch / 4inch時の注意点。</p>

<p><img src="http://mzgk.github.io/images/2014/0805/AutoLayout.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bashでgitコマンドの補完をする]]></title>
    <link href="http://mzgk.github.io/blog/2014/complement-gitcommand-in-bash/"/>
    <updated>2014-08-05T18:53:04+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/complement-gitcommand-in-bash</id>
    <content type="html"><![CDATA[<ul>
<li>補完用のファイルをダウンロード

<ul>
<li><a href="https://github.com/git/git/blob/master/contrib/completion/git-completion.bash">https://github.com/git/git/blob/master/contrib/completion/git-completion.bash</a></li>
</ul>
</li>
<li>~/.git-completion.bashとして設置</li>
<li>~/.bash_profileにパスを記述</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.git-completion.bash
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CoreDataで使用するsqliteの中身を確認する方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/check-on-terminal-sqlite-coredata/"/>
    <updated>2014-08-05T18:50:06+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/check-on-terminal-sqlite-coredata</id>
    <content type="html"><![CDATA[<ul>
<li>Organaizerを開く</li>
<li>該当アプリを選択</li>
<li>DownLoad</li>
<li>ターミナルでダウンロードしたファイル内を移動（〜.xcapp）</li>
<li>.sqlite（DocumentsかLibrary/Application Support/）</li>
<li>sqliteで接続する</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sqlite3 名前.sqlite
</span><span class='line'>sqlite&gt; .tables　→　テーブル名の確認
</span><span class='line'>sqlite&gt; .schema テーブル名　→　スキーマの確認
</span><span class='line'>sqlite&gt; <span class="k">select</span> * from テーブル名;
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git branchのメモ]]></title>
    <link href="http://mzgk.github.io/blog/2014/git-branch/"/>
    <updated>2014-08-05T18:44:02+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/git-branch</id>
    <content type="html"><![CDATA[<p>分岐させると、他のブランチの影響を受けないので、同じリポジトリ内で複数の変更を進めることができる。<br/>
例えば、<br/>
「masterブランチ：大本の開発中」に機能を追加したいが、うまくできるかわからないのでちょっと試験的にやってみたい。<br/>
だけど、ダメだった時に追加前に戻せるかが不安。<br/>
こんな時にブランチをきって、そっちで機能追加をする。<br/>
うまく行けばmasterにマージし、だめならブランチを削除すればmasterに影響はない。</p>

<h2>ブランチの一覧を表示</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git branch
</span><span class='line'>* master  // masterしかない状態
</span></code></pre></td></tr></table></div></figure>


<h2>ブランチを作成</h2>

<p>masterの状態を複製して、ブランチが作成される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git branch ブランチ名
</span><span class='line'>// 状態を表示
</span><span class='line'><span class="nv">$ </span>git branch
</span><span class='line'> ブランチ名
</span><span class='line'>*master // masterブランチにいる
</span></code></pre></td></tr></table></div></figure>


<h2>ブランチを切り替える</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git checkout ブランチ名
</span><span class='line'>// 状態を表示
</span><span class='line'><span class="nv">$ </span>git branch
</span><span class='line'>*ブランチ名  // このブランチにいる
</span><span class='line'> master
</span></code></pre></td></tr></table></div></figure>


<h2>作業</h2>

<p>このブランチで作業し、add, commit</p>

<h2>masterにマージする</h2>

<p>ブランチで作業した内容をmasterにマージする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>// 一旦、masterに切り替える
</span><span class='line'><span class="nv">$ </span>git checkout master
</span><span class='line'>// 状態を表示
</span><span class='line'><span class="nv">$ </span>git branch
</span><span class='line'> ブランチ名
</span><span class='line'>*master // masterブランチにいる
</span><span class='line'>// マージする
</span><span class='line'><span class="nv">$ </span>git merge ブランチ名
</span></code></pre></td></tr></table></div></figure>


<h2>ブランチを削除する</h2>

<p>不要になったブランチは削除する。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git branch -d ブランチ名
</span><span class='line'>// 状態を表示
</span><span class='line'><span class="nv">$ </span>git branch
</span><span class='line'>*master
</span></code></pre></td></tr></table></div></figure>


<p>参考：<a href="http://www.backlog.jp/git-guide/stepup/stepup1_1.html">http://www.backlog.jp/git-guide/stepup/stepup1_1.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Appをインストールできるデバイスを制限する方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/restrict-device/"/>
    <updated>2014-08-05T18:39:16+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/restrict-device</id>
    <content type="html"><![CDATA[<p>カメラ機能などを使用するアプリをリリースする場合に、AppStoreからインストールできるデバイスを制限する方法。<br/>
（カメラなしデバイスにインストールさせない方法）</p>

<p><img src="http://mzgk.github.io/images/2014/0805/Device.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSONからデータを取得する方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/analyze-json/"/>
    <updated>2014-08-05T18:31:45+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/analyze-json</id>
    <content type="html"><![CDATA[<p>以下のようなJSONデータから指定したデータを取得する方法。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>meta = 
</span><span class='line'>{
</span><span class='line'>    method = POST;
</span><span class='line'>    url = "/app/ApiPosts/post.json";
</span><span class='line'>};
</span><span class='line'>response =    /// (1)
</span><span class='line'>{
</span><span class='line'>    "comment_id" = 144;   /// (2)
</span><span class='line'>    "video_id" = 144;
</span><span class='line'>    Adviser = {
</span><span class='line'>        name = "&lt;null&gt;";
</span><span class='line'>    };
</span><span class='line'>    Post = {
</span><span class='line'>        "adviser_id" = "-1";
</span><span class='line'>        "video_id" = 144;   /// (3)
</span><span class='line'>    };
</span><span class='line'>    User = {
</span><span class='line'>        id = 1;
</span><span class='line'>        username = taro;
</span><span class='line'>    };
</span><span class='line'>    Comments =  /// ここは配列でComment-Videoが１セットで複数セットくる
</span><span class='line'>    (
</span><span class='line'>        {
</span><span class='line'>            Comment = {
</span><span class='line'>                comment = "\U305d\U305d\U305d\U305d\n";   /// (4)
</span><span class='line'>                id = 144;
</span><span class='line'>            };
</span><span class='line'>            Video = {
</span><span class='line'>                hash = 266d1a0ccabc501149322446e49e274a;    /// (4)
</span><span class='line'>                id = 144;
</span><span class='line'>            };
</span><span class='line'>        }
</span><span class='line'>    );
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<h2>(1) response = 以下のデータを取得</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">responseDataDic</span> <span class="o">=</span> <span class="p">(</span><span class="n">NSDictionary</span><span class="o">*</span><span class="p">)</span><span class="n">responseObject</span><span class="p">[</span><span class="s">@&quot;response&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>(2) comment_idのデータを取得</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;commnt_id : %@&quot;</span><span class="p">,</span> <span class="n">responseDataDic</span><span class="p">[</span><span class="s">@&quot;comment_id&quot;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>(3) Post の video_idのデータを取得</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Post video_id: %@&quot;</span><span class="p">,</span> <span class="n">responseDataDic</span><span class="p">[</span><span class="s">@&quot;Post&quot;</span><span class="p">][</span><span class="s">@&quot;video_id&quot;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>(4) Commentsの中のComment-commentとVideo-hashを取得</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">/// 高速列挙で辞書に抜き出し</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dic</span> <span class="k">in</span> <span class="n">responseDataDic</span><span class="p">[</span><span class="s">@&quot;Comments&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Comment id: %@&quot;</span><span class="p">,</span> <span class="n">dic</span><span class="p">[</span><span class="s">@&quot;Comment&quot;</span><span class="p">][</span><span class="s">@&quot;id&quot;</span><span class="p">]);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Video id: %@&quot;</span><span class="p">,</span> <span class="n">dic</span><span class="p">[</span><span class="s">@&quot;Video&quot;</span><span class="p">][</span><span class="s">@&quot;id&quot;</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>もしくは２ステップで</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">/// 可変配列を用意</span>
</span><span class='line'><span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">array</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="n">array</span><span class="p">];</span>
</span><span class='line'><span class="c1">/// 高速列挙でComments部分を辞書に抜き出し、それを可変配列に追加</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dic</span> <span class="k">in</span> <span class="n">responseDataDic</span><span class="p">[</span><span class="s">@&quot;Comments&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="n">array</span> <span class="nl">addObject:</span><span class="n">dic</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">/// 可変配列から辞書に抜き出し</span>
</span><span class='line'><span class="k">for</span> <span class="p">(</span><span class="n">NSDictionary</span> <span class="o">*</span><span class="n">dic</span> <span class="k">in</span> <span class="n">array</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Comment id: %@&quot;</span><span class="p">,</span> <span class="n">dic</span><span class="p">[</span><span class="s">@&quot;Comment&quot;</span><span class="p">][</span><span class="s">@&quot;id&quot;</span><span class="p">]);</span>
</span><span class='line'>    <span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;Video id: %@&quot;</span><span class="p">,</span> <span class="n">dic</span><span class="p">[</span><span class="s">@&quot;Video&quot;</span><span class="p">][</span><span class="s">@&quot;id&quot;</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MagicalRecordのWarningの消し方]]></title>
    <link href="http://mzgk.github.io/blog/2014/magicalrecord-warning/"/>
    <updated>2014-08-05T18:23:49+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/magicalrecord-warning</id>
    <content type="html"><![CDATA[<p>MagicalRecord2.2はmogeneratorとの使用を想定しているらしく、mogeneratorを使用しない場合はWarningが12個ばかり表示される。<br/>
参考：<a href="https://github.com/magicalpanda/MagicalRecord/issues/652">https://github.com/magicalpanda/MagicalRecord/issues/652</a></p>

<p>動作に特に問題はないが、気持ち悪いのでワーニングを消す方法。<br/>
参考：<a href="http://hayatomo.com/2013/10/03/1122">http://hayatomo.com/2013/10/03/1122</a></p>

<p><img src="http://mzgk.github.io/images/2014/0805/MagicalRecord_Warning.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Objective-Cの真偽値]]></title>
    <link href="http://mzgk.github.io/blog/2014/objectivec-boolean/"/>
    <updated>2014-08-05T18:18:53+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/objectivec-boolean</id>
    <content type="html"><![CDATA[<h3>通常はBOOLなのでこっちを使う</h3>

<ul>
<li>真：YES : 1</li>
<li>偽：NO : 0</li>
</ul>


<h3>Booleanの場合</h3>

<ul>
<li>真：TRUE : 1</li>
<li>偽：FALSE : 0</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">new_flg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="err">偽の判断（</span><span class="n">new_flg</span><span class="err">の値は</span><span class="n">NO</span> <span class="o">=</span> <span class="mi">0</span><span class="err">）</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenSSLのバージョンアップ]]></title>
    <link href="http://mzgk.github.io/blog/2014/openssl-versionup/"/>
    <updated>2014-08-05T18:16:03+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/openssl-versionup</id>
    <content type="html"><![CDATA[<p>2014.8.5現在の最新版は 1.0.1h。</p>

<h2>バージョン確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>openssl version
</span><span class='line'>OpenSSL 1.0.1g 7 Apr 2014  ← Macにインストールされているバージョンが表示される
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>brew info openssl
</span><span class='line'>openssl: stable 1.0.1g <span class="o">(</span>bottled<span class="o">)</span>  ←　HomeBrewのデータベース上の情報
</span></code></pre></td></tr></table></div></figure>


<h2>Homebrewのデータベースを更新</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew update
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>brew info openssl
</span><span class='line'>openssl: stable 1.0.1h <span class="o">(</span>bottled<span class="o">)</span>　←　更新された
</span></code></pre></td></tr></table></div></figure>


<h2>OpenSSLの更新</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew upgrade openssl
</span><span class='line'>...
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<h2>利用可能か確認</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>openssl version
</span><span class='line'>...
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>which openssl
</span><span class='line'>/usr/bin/openssl　←　Homebrewでインストールしたものではない
</span></code></pre></td></tr></table></div></figure>


<p><code>$ brew upgrade openssl</code> のログに
<code>This formula is keg-only, so it was not symlinked into /usr/local.</code> とあるように、まだリンクされていない。</p>

<h2>HoembrewでインストールしたOpenSSLの使用設定</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>brew link openssl --force
</span><span class='line'>...
</span><span class='line'><span class="nv">$ </span>openssl version
</span><span class='line'>OpenSSL 1.0.1h 5 Jun 2014　←　変わらない場合は、一度Terminalを再起動
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>which openssl
</span><span class='line'>/usr/local/bin/openssl
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIButtonでタップ毎にボタン画像を切替える]]></title>
    <link href="http://mzgk.github.io/blog/2014/change-image-of-button-to-tap-each/"/>
    <updated>2014-08-05T18:11:27+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/change-image-of-button-to-tap-each</id>
    <content type="html"><![CDATA[<p>UIButtonをトグルスイッチのように使う方法。<br/>
プレイボタン　→　タップ　→　ストップボタン　→　タップ　→　プレイボタン</p>

<h2>ボタンに画像を設定する</h2>

<p>viewDidLoadなど。画像はアセットカタログに登録済み。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="c1">// 通常（プレイ）</span>
</span><span class='line'><span class="p">[</span><span class="n">_button</span> <span class="nl">setImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;playButton&quot;</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="c1">// プレイでボタンをタップ中</span>
</span><span class='line'><span class="p">[</span><span class="n">_button</span> <span class="nl">setImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;stopButton&quot;</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateHighlighted</span><span class="p">];</span>
</span><span class='line'><span class="c1">// ストップ</span>
</span><span class='line'><span class="p">[</span><span class="n">_button</span> <span class="nl">setImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;stopButton&quot;</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateNormal</span> <span class="o">|</span> <span class="n">UIControlStateSelected</span><span class="p">];</span>
</span><span class='line'><span class="c1">// ストップでボタンをタップ中</span>
</span><span class='line'><span class="p">[</span><span class="n">_button</span> <span class="nl">setImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;playButton&quot;</span><span class="p">]</span> <span class="nl">forState:</span><span class="n">UIControlStateHighlighted</span> <span class="o">|</span> <span class="n">UIControlStateSelected</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>ボタンタップアクション</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">userButtonTapped:</span><span class="p">(</span><span class="n">UIButton</span> <span class="o">*</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">sender</span><span class="p">.</span><span class="n">selected</span> <span class="o">=</span> <span class="o">!</span><span class="n">sender</span><span class="p">.</span><span class="n">selected</span><span class="p">;</span>   <span class="c1">// これが重要（状態を入れ替える）</span>
</span><span class='line'>    <span class="c1">// プレイをタップ</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">sender</span><span class="p">.</span><span class="n">selected</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">_userTimer</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSTimer</span> <span class="nl">scheduledTimerWithTimeInterval:</span><span class="p">[</span><span class="n">_userFrameSpeedInfos</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="n">floatValue</span><span class="p">]</span>
</span><span class='line'>                                                      <span class="nl">target:</span><span class="n">self</span>
</span><span class='line'>                                                    <span class="nl">selector:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">timerUserView:</span><span class="p">)</span>
</span><span class='line'>                                                    <span class="nl">userInfo:</span><span class="nb">nil</span>
</span><span class='line'>                                                     <span class="nl">repeats:</span><span class="n">YES</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// ストップをタップ</span>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">_userTimer</span> <span class="n">invalidate</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>おまけ</h2>

<p>タイマーが停止した時にボタンをプレイに戻す。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'> <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">timerUserView:</span><span class="p">(</span><span class="n">NSTimer</span><span class="o">*</span><span class="p">)</span><span class="n">timer</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">index</span> <span class="o">=</span> <span class="o">++</span><span class="n">_userFramIndex</span><span class="p">;</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="o">&lt;</span> <span class="p">[</span><span class="n">_userFrameImageInfos</span> <span class="n">count</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">self</span> <span class="nl">displayFrameImageAtIndex:</span><span class="n">index</span> <span class="nl">userDistinction:</span><span class="n">USER</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// タイマーを止める</span>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">timer</span> <span class="n">invalidate</span><span class="p">];</span>
</span><span class='line'>        <span class="n">_userFramIndex</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="p">[</span><span class="n">_userButton</span> <span class="nl">setSelected:</span><span class="n">NO</span><span class="p">];</span>   <span class="c1">// これでプレイに戻る</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIImageViewにスワイプジェスチャーを適用させる]]></title>
    <link href="http://mzgk.github.io/blog/2014/applied-to-uiimageview-swipe/"/>
    <updated>2014-08-05T18:06:46+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/applied-to-uiimageview-swipe</id>
    <content type="html"><![CDATA[<p>通常に設定（コード or Interface Builder）からだけでは、反応しない。<br/>
UIImageViewの初期値が「User Interaction Enabled = NO」になっているので、
以下を設定。（Interface Builderからでも、Attributte Inspector &ndash; View &ndash; User Interaction Enabledのチェックで可）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="p">[</span><span class="n">_imageView</span> <span class="n">setUserInteractionEnabled</span> <span class="o">=</span> <span class="n">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
