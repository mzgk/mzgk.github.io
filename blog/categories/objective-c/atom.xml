<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Objective-C | jubilee]]></title>
  <link href="http://mzgk.github.io/blog/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://mzgk.github.io/"/>
  <updated>2014-08-08T16:39:25+09:00</updated>
  <id>http://mzgk.github.io/</id>
  <author>
    <name><![CDATA[mzgk]]></name>
    <email><![CDATA[mzgkworks@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ViewControllerでアプリの状態を検知する]]></title>
    <link href="http://mzgk.github.io/blog/2014/viewcontroller-notification/"/>
    <updated>2014-08-08T15:52:13+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/viewcontroller-notification</id>
    <content type="html"><![CDATA[<p>ViewControllerで、バックグラウンドから復帰した際の処理をしたかったが、検知できる方法がAppDelegate.mの <code>applicationWillEnterForeground:</code> 以外に思いつかなかったので調査。<br/>
結果としては、ViewControllerでもアプリの状態を検知する方法があった。</p>

<h2>通知を利用する</h2>

<p>ViewController.mの <code>viewWillAppear</code> などに、通知を追加しておく。</p>

<h3>追加</h3>

<p>```objective-c
&ndash; (void)viewWillAppear:(BOOL)animated</p>

<pre><code>// UIApplicationDidBecomeActiveNotification：アクティブになったとき
// applicationDidBecomeActive（自作）メソッドを呼ぶ
[[NSNotificationCenter defaultCenter] addObserver:self 
                                         selector:@selector(applicationDidBecomeActive) 
                                             name:UIApplicationDidBecomeActiveNotification 
                                           object:nil];
</code></pre>

<p>}
```</p>

<h3>削除</h3>

<p>```objective-c
&ndash; (void)viewWillDisappear:(BOOL)animated
{</p>

<pre><code>// 通知の削除
[[NSNotificationCenter defaultCenter] removeObserver:self];
</code></pre>

<p>}
```</p>

<h2>状態一覧</h2>

<p>UIApplicationのNotifications一覧</p>

<h3>ライフサイクル系</h3>

<ul>
<li>UIApplicationDidFinishLaunchingNotification

<ul>
<li>アプリケーションが起動した直後に通知</li>
</ul>
</li>
<li>UIApplicationWillEnterForegroundNotification

<ul>
<li>アプリケーションがアクティブになる直前に通知</li>
</ul>
</li>
<li>UIApplicationDidBecomeActiveNotification

<ul>
<li>アプリケーションがアクティブになった時に通知</li>
</ul>
</li>
<li>UIApplicationDidEnterBackgroundNotification

<ul>
<li>アプリケーションがバックグラウンドに入る時に通知</li>
</ul>
</li>
<li>UIApplicationWillResignActiveNotification

<ul>
<li>アプリケーションがアクティブで無くなる直前に通知。通知アラートが表示される時などにも通知される</li>
</ul>
</li>
<li>UIApplicationWillTerminateNotification

<ul>
<li>アプリケーションが終了される直前に通知</li>
</ul>
</li>
</ul>


<h3>サイズ変更系</h3>

<ul>
<li>UIApplicationWillChangeStatusBarFrameNotification

<ul>
<li>ステータスバーのサイズ変更される直前に通知</li>
</ul>
</li>
<li>UIApplicationDidChangeStatusBarFrameNotification

<ul>
<li>ステータスバーのサイズ変更が発生した時に通知。デバイスが回転した時など</li>
</ul>
</li>
<li>UIApplicationWillChangeStatusBarOrientationNotification

<ul>
<li>デバイスの向きが変わる直前に通知</li>
</ul>
</li>
<li>UIApplicationDidChangeStatusBarOrientationNotification

<ul>
<li>デバイスの向きが変わった後に通知</li>
</ul>
</li>
</ul>


<h3>その他</h3>

<ul>
<li>UIApplicationDidReceiveMemoryWarningNotification

<ul>
<li>メモリ不足の警告発生時に通知</li>
</ul>
</li>
<li>UIApplicationProtectedDataDidBecomeAvailable

<ul>
<li>保護されたファイルへコードからアクセスが可能になった時に通知</li>
</ul>
</li>
<li>UIApplicationProtectedDataWillBecomeUnavailable

<ul>
<li>保護されたファイルへコードからアクセス出来なくなる前に通知</li>
</ul>
</li>
<li>UIApplicationSignificantTimeChangeNotification

<ul>
<li>時間に大きな変更が有った場合に通知。日付が変わった時や夏時間に変更など</li>
</ul>
</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://qiita.com/hkomo746/items/22fcecfd0773023ed56a">http://qiita.com/hkomo746/items/22fcecfd0773023ed56a</a></li>
<li><a href="http://d.hatena.ne.jp/nakamura001/20111107/1320680842">http://d.hatena.ne.jp/nakamura001/20111107/1320680842</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[プッシュ通知の誤解]]></title>
    <link href="http://mzgk.github.io/blog/2014/push-notification/"/>
    <updated>2014-08-07T13:25:29+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/push-notification</id>
    <content type="html"><![CDATA[<p>アプリがバックグラウンド状態で、サーバーからプッシュ通知を受信した際の動作で、自分が誤解していたこと。<br/>
実機繋げてデバッグ実行中に、バックグラウンドにいる状態では処理が動いている形跡がないので、おかしいな〜と。<br/>
Apple公式の「LocalおよびPush Notificationプログラミングガイド」を確認したら、P14に記載されてた。</p>

<h3>誤り</h3>

<ol>
<li>サーバーからプッシュ通知を受信</li>
<li>アプリが通知を受信し、アプリがバックグラウンドでアイコンバッジ表示や受信を契機にした処理を行う（自分でコーディング）</li>
</ol>


<h3>正しくは</h3>

<ol>
<li>サーバーからプッシュ通知を受信</li>
<li>OSが通知を受信し、メッセージを表示（アイコンバッジはサーバーからの指示でOSが表示）</li>
<li>ユーザーがアプリを起動し、受け取った通知をもとに処理を行う（自分でコーディング）</li>
</ol>


<h3>注意</h3>

<ul>
<li>アプリが完全に終了している時で、通知受信後にメッセージセンターからではなく、アプリのアイコンから起動した場合は、受信データを受け取ることができない</li>
<li>通知センターから起動とアプリアイコンから起動では、動作がちがう</li>
<li>バックグラウンドで処理をしたい場合は、サーバーからの通知ペイロードに <code>content-available=1</code> を含むこと</li>
<li>TARGETS &ndash; Background Models &ndash; Remote notifications, (Background fetch)にチェック</li>
<li>UIRemoteNotificationTypeNewsstandContentAvailability指定するとバッジがでない</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/shu223/20140113/1389612563">http://d.hatena.ne.jp/shu223/20140113/1389612563</a></li>
<li><a href="http://blog.techfirm.co.jp/2013/10/11/ios-7-remote-notification%E3%81%AE%E6%8C%99%E5%8B%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/">http://blog.techfirm.co.jp/2013/10/11/ios-7-remote-notification%E3%81%AE%E6%8C%99%E5%8B%95%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</a></li>
<li><a href="http://himaratsu.hatenablog.com/entry/objc/push">http://himaratsu.hatenablog.com/entry/objc/push</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CocoaPodsでライセンス表記を自動で作成する]]></title>
    <link href="http://mzgk.github.io/blog/2014/cocoapods-license-auto-make/"/>
    <updated>2014-08-06T13:52:05+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/cocoapods-license-auto-make</id>
    <content type="html"><![CDATA[<p>CocoaPodsを使用している場合に、使用しているライブラリのライセンス表記を自動で作成する方法。<br/>
ライセンス表記は、iPhoneの設定アプリに作成される。<br/>
<code>pod install / pod update</code> するたびに自動作成してくれるので、ライブラリの追加／削除のたびにライセンス表記の修正をしなくていいので便利。 <br/>
作成時に、些細なところでハマったので、やり方を残しておく。</p>

<h2>Settings.bundleを作成</h2>

<p>File &ndash; New &ndash; File から、iOS &ndash; Resource で「Settings Bundle」を選択。
<img src="/images/2014/0806/cocoapods-license-1.png" alt="settingbundle1" /></p>

<p>作成する場所を選択する。<br/>
ここで、Groupを「Supporting Files」にはしないこと。　←　ここでハマった。
<img src="/images/2014/0806/cocoapods-license-2.png" alt="settingbundle2" /></p>

<h2>Root.plistの編集</h2>

<p>デフォルトの状態から、以下のように編集する。<br/>
「Child Pane」は、「Type」からしか選択はできないので注意。<br/>
<img src="/images/2014/0806/cocoapods-license-3.png" alt="root.plist" /></p>

<h2>Acknowledgements.plistの作成</h2>

<p>「Settings.bundle」内に「Acknowledgements.plist」を作成する。<br/>
作成方法は通常のファイル作成と違い、以下のようにする。</p>

<ul>
<li>「Settings.bundle」を右クリックで「パッケージの内容を表示」させ</li>
<li>「Root.plist」を複製し、「Acknowledgements.plist」に名前をかえる</li>
<li>「Acknowledgements.plist」を開き（エディタなど）、中身を消す　←　ここでもハマった。</li>
</ul>


<p><img src="/images/2014/0806/cocoapods-license-4.png" alt="Acknowledgements.plist" /></p>

<h2>Podfileへの追加</h2>

<p>Podfileへ、以下を追加する。</p>

<p><code>
post_install do | installer |
require 'fileutils'
FileUtils.cp_r('Pods/Pods-acknowledgements.plist', 'SampleLicense/Settings.bundle/Acknowledgements.plist', :remove_destination =&gt; true)
end
</code></p>

<p><code>Settings.bundle</code> へのパスは、XcodeでSettings.bundleを表示させ、エディタエリア上部のジャンプバーを参照すること。<br/>
<img src="/images/2014/0806/cocoapods-license-5.png" alt="Podfile" /></p>

<h2>pod install</h2>

<p>あとは、<code>pod install</code> をすれば、完成。Acknowledgements.plistはこんな感じになる。<br/>
<img src="/images/2014/0806/cocoapods-license-6.png" alt="Acknowledgements.plist" /></p>

<p>ビルドし、iPhoneの設定アプリから確認することができる。<br/>
<img src="/images/2014/0806/cocoapods-license-7.png" alt="Setting.app" />
<img src="/images/2014/0806/cocoapods-license-8.png" alt="Setting.app" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableViewのカスタマイズ方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/customize-uitableview/"/>
    <updated>2014-08-05T19:04:52+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/customize-uitableview</id>
    <content type="html"><![CDATA[<p>UITableViewをカスタマイズする方法。</p>

<p><img src="/images/2014/0805/UITableView.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autolayout時の注意]]></title>
    <link href="http://mzgk.github.io/blog/2014/autolayout-point/"/>
    <updated>2014-08-05T18:56:40+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/autolayout-point</id>
    <content type="html"><![CDATA[<p>3.5inch / 4inch時の注意点。</p>

<p><img src="/images/2014/0805/AutoLayout.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
</feed>
