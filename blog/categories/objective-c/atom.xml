<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Objective-C | jubilee]]></title>
  <link href="http://mzgk.github.io/blog/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://mzgk.github.io/"/>
  <updated>2014-08-14T20:38:15+09:00</updated>
  <id>http://mzgk.github.io/</id>
  <author>
    <name><![CDATA[mzgk]]></name>
    <email><![CDATA[mzgkworks@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[セルに追加したボタンの処理をViewControllerで行う]]></title>
    <link href="http://mzgk.github.io/blog/2014/handle-button-in-cell/"/>
    <updated>2014-08-14T20:11:37+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/handle-button-in-cell</id>
    <content type="html"><![CDATA[<p>カスタムセルに追加したボタンの処理を、ViewControllerで行う方法。<br/>
タップされたボタンのセルのインデックスの取得。</p>

<h2>Cell</h2>

<ol>
<li>StoryBoard上でセル内にボタンを追加する</li>
<li>Attribute inspector &ndash; view &ndash; Tag に値を設定する</li>
<li>Outlet接続のみ行う（不要かも）</li>
</ol>


<h2>ViewController</h2>

<h3>ボタンのプロパティを宣言</h3>

<p><code>objective-c
@property (weak, nonatomic) UIButton *button;
</code></p>

<h3>ボタンとタップ時の処理を作成する</h3>

<p>任意の場所で。</p>

<p><code>objective-c
// Cellにボタンを設定した時のTag値
_button = (UIButton*)[cell viewWithTag:1];
// ボタンのイベントを登録
[_button addTarget:self action:@selector(buttonTapped:event:) forControlEvents:UIControlEventTouchUpInside];
</code></p>

<h3>タップ時の処理</h3>

<p>```objective-c
&ndash; (void)buttonTapped:(id)sender event:(UIEvent*)event
{</p>

<pre><code>// タップされたボタンのセルインデックスを取得する
UITouch *touch = [[event allTouches]anyObject];
CGPoint point = [touch locationInView:_sampleTableView];
_tappedIndexPath = [_sampleTableView indexPathForRowAtPoint:point];

// 実行したい処理
</code></pre>

<p>}
```</p>

<h2>参考</h2>

<ul>
<li><a href="http://cocoadays.blogspot.jp/2011/06/ios-uinib-uitableviewcell_26.html">http://cocoadays.blogspot.jp/2011/06/ios-uinib-uitableviewcell_26.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[指定したセルの表示更新を行う]]></title>
    <link href="http://mzgk.github.io/blog/2014/update-selected-cell/"/>
    <updated>2014-08-14T20:09:55+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/update-selected-cell</id>
    <content type="html"><![CDATA[<p>特定のセルのみの表示更新を行いたい場合の方法。<br/>
以下のようなパターンで必要になった。</p>

<ol>
<li>セルをスワイプして削除ボタンを表示し、削除ボタンをタップ</li>
<li>セル内のデータに基づく内部データを処理（セル自体は削除したくない）</li>
<li>削除ボタンが消せない（reloadData）</li>
<li>セルのみ更新をしたい</li>
</ol>


<p>```objective-c
&ndash; (void)tableView:(UITableView <em>)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath </em>)indexPath
{</p>

<pre><code>if (editingStyle == UITableViewCellEditingStyleDelete) {
    // セルの削除ボタンでしたい処理
    ...
    // 処理したセルの更新↓↓↓
    NSArray *indexPaths = [NSArray arrayWithObject:indexPath];
    [self.tableView reloadRowsAtIndexPaths:indexPaths withRowAnimation:UITableViewRowAnimationRight];
    // ↑↑↑
} else if (editingStyle == UITableViewCellEditingStyleInsert) {
}
</code></pre>

<p>}
```</p>

<h2>更新時のアニメーション</h2>

<ul>
<li>UITableViewRowAnimationFade</li>
<li>UITableViewRowAnimationRight</li>
<li>UITableViewRowAnimationLeft</li>
<li>UITableViewRowAnimationTop</li>
<li>UITableViewRowAnimationBottom</li>
<li>UITableViewRowAnimationNone</li>
<li>UITableViewRowAnimationMiddle</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIImageView内に表示する画像の表示モード]]></title>
    <link href="http://mzgk.github.io/blog/2014/uiimageview-contentmode/"/>
    <updated>2014-08-14T20:09:19+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/uiimageview-contentmode</id>
    <content type="html"><![CDATA[<p>UIImageView内に表示する画像の表示モードを指定する方法。</p>

<h2>指定方法</h2>

<p><code>objective-c
_imageView.contentMode = UIViewContentModeCenter;
</code></p>

<h2>モード</h2>

<p>```objective-c
typedef NS_ENUM(NSInteger, UIViewContentMode) {</p>

<pre><code>UIViewContentModeScaleToFill,
UIViewContentModeScaleAspectFit,      // contents scaled to fit with fixed aspect. remainder is transparent
UIViewContentModeScaleAspectFill,     // contents scaled to fill with fixed aspect. some portion of content may be clipped.
UIViewContentModeRedraw,              // redraw on bounds change (calls -setNeedsDisplay)
UIViewContentModeCenter,              // contents remain same size. positioned adjusted.
UIViewContentModeTop,
UIViewContentModeBottom,
UIViewContentModeLeft,
UIViewContentModeRight,
UIViewContentModeTopLeft,
UIViewContentModeTopRight,
UIViewContentModeBottomLeft,
UIViewContentModeBottomRight,
</code></pre>

<p>};
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アプリの標準言語を日本語のみにする方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/localization-japanese-only/"/>
    <updated>2014-08-12T17:39:06+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/localization-japanese-only</id>
    <content type="html"><![CDATA[<p>日本国内のみの配布などで、アプリの標準言語を日本語のみにする設定する方法。<br/>
アプリ作成時のデフォルトは英語になっており、UIImagePickerなどを使用してカメラ機能を実装した場合には、Cancel / Retakeなど英語で表示がされる。 これを日本語に変える。
ただし、通常のlocalization対応と違い日本語オンリーにする対応。</p>

<h2>Localization native development</h2>

<ol>
<li>プロジェクトナビゲーターでプロジェクトを選択 &ndash; Target &ndash; Infoを開く</li>
<li>Localization native development region &ndash; en → Japanに変更する
<img src="/images/2014/0812/localization-1.png" alt="localization-1" /></li>
</ol>


<h2>Localizations</h2>

<ol>
<li>上記の設定後に、そのままの場所で右クリック → Add Row</li>
<li>Keyに「Localizations」を追加する</li>
<li>Item0を選択し、Valueの値を「Japanese」に変更する
<img src="/images/2014/0812/localization-2.png" alt="localization-2" /></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIScrollViewに配置したViewが下にズレる時の対応]]></title>
    <link href="http://mzgk.github.io/blog/2014/uiscrollview-checkpoint-2/"/>
    <updated>2014-08-12T16:44:48+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/uiscrollview-checkpoint-2</id>
    <content type="html"><![CDATA[<p>NavigationBarなどが存在し、UIScrollViewの上にviewを配置した画面の場合に、ビルドして確認するとviewが下にズレて表示されることがある。</p>

<h2>ViewController &ndash; Attribute inspector</h2>

<p>このときは、ViewControllerのAttribute inspector &ndash; Adjubst Scroll View Insets　のチェックを外す。<br/>
<code>automaticallyAdjustsScrollViewInsets = NO</code></p>

<p><img src="/images/2014/0812/attribute-inspector.png" alt="inspector" /></p>

<h2>参考</h2>

<ul>
<li><a href="http://www.slideshare.net/YoshinoriImajo/ios7-30039408">http://www.slideshare.net/YoshinoriImajo/ios7-30039408</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
