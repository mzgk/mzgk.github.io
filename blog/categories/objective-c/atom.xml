<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Objective-C | jubilee]]></title>
  <link href="http://mzgk.github.io/blog/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://mzgk.github.io/"/>
  <updated>2014-08-12T17:54:43+09:00</updated>
  <id>http://mzgk.github.io/</id>
  <author>
    <name><![CDATA[mzgk]]></name>
    <email><![CDATA[mzgkworks@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[アプリの標準言語を日本語のみにする方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/localization-japanese-only/"/>
    <updated>2014-08-12T17:39:06+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/localization-japanese-only</id>
    <content type="html"><![CDATA[<p>日本国内のみの配布などで、アプリの標準言語を日本語のみにする設定する方法。<br/>
アプリ作成時のデフォルトは英語になっており、UIImagePickerなどを使用してカメラ機能を実装した場合には、Cancel / Retakeなど英語で表示がされる。 これを日本語に変える。
ただし、通常のlocalization対応と違い日本語オンリーにする対応。</p>

<h2>Localization native development</h2>

<ol>
<li>プロジェクトナビゲーターでプロジェクトを選択 &ndash; Target &ndash; Infoを開く</li>
<li>Localization native development region &ndash; en → Japanに変更する
<img src="/images/2014/0812/localization-1.png" alt="localization-1" /></li>
</ol>


<h2>Localizations</h2>

<ol>
<li>上記の設定後に、そのままの場所で右クリック → Add Row</li>
<li>Keyに「Localizations」を追加する</li>
<li>Item0を選択し、Valueの値を「Japanese」に変更する
<img src="/images/2014/0812/localization-2.png" alt="localization-2" /></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UIScrollViewに配置したViewが下にズレる時の対応]]></title>
    <link href="http://mzgk.github.io/blog/2014/uiscrollview-checkpoint-2/"/>
    <updated>2014-08-12T16:44:48+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/uiscrollview-checkpoint-2</id>
    <content type="html"><![CDATA[<p>NavigationBarなどが存在し、UIScrollViewの上にviewを配置した画面の場合に、ビルドして確認するとviewが下にズレて表示されることがある。</p>

<h2>ViewController &ndash; Attribute inspector</h2>

<p>このときは、ViewControllerのAttribute inspector &ndash; Adjubst Scroll View Insets　のチェックを外す。<br/>
<code>automaticallyAdjustsScrollViewInsets = NO</code></p>

<p><img src="/images/2014/0812/attribute-inspector.png" alt="inspector" /></p>

<h2>参考</h2>

<ul>
<li><a href="http://www.slideshare.net/YoshinoriImajo/ios7-30039408">http://www.slideshare.net/YoshinoriImajo/ios7-30039408</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneのスクリーンサイズを調べる方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/check-screensize/"/>
    <updated>2014-08-12T16:15:35+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/check-screensize</id>
    <content type="html"><![CDATA[<p>iPhone・iPadなどのスクリーンサイズを調べる方法。</p>

<p>```objective-c
// 3.5インチかどうかの判断
&ndash; (BOOL)isSmallSizeScreen
{</p>

<pre><code>CGSize screenSize = [[UIScreen mainScreen]bounds].size;
if (screenSize.height == 480.0) {
    return YES;
}
return NO;
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アプリ内のフォントを統一させる方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/font-standardize/"/>
    <updated>2014-08-11T15:05:04+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/font-standardize</id>
    <content type="html"><![CDATA[<p>アプリ内のフォントを統一させる方法。<br/>
今回は、カスタムフォントとして「Rounded-L M+ 2p regular」を使用。</p>

<h2>プロジェクトへフォントを追加する</h2>

<p>Xcodeを開き、追加したいフォントファイルをドラッグ＆ドロップ（または、右クリック等から"Add Files to 〜"）で、ファイルをプロジェクトに追加する。<br/>
<img src="/images/2014/0811/add-fontfile.png" alt="add fontfile" /></p>

<h2>.plistへの情報追加</h2>

<p>Supporting Files &ndash;> プロジェクト名.plistへ追加したフォントの情報を追加する。<br/>
<code>Fonts provided by application</code> &ndash;> item0 にフォントの「PostScript 名」を記述する。<br/>
※PostScript名は、FontBook.appを起動し、対象フォントのinfoボタンから確認<br/>
<img src="/images/2014/0811/add-plist.png" alt="plist" /></p>

<h2>AppDelegate.m</h2>

<p><code>AppDelegate.m</code> の <code>didFinishLaunchingWithOptions:</code> 等で、<code>appearance</code> を使い設定する。</p>

<p>```objective-c
// フォント
UIFont <em>baseInputFont = [UIFont fontWithName:@&ldquo;rounded-l-mplus-2p-regular&rdquo; size:16.0f];
UIFont </em>baseTitleFont = [UIFont fontWithName:@&ldquo;rounded-l-mplus-2p-regular&rdquo; size:18.0f];
// フォント・カラー
NSDictionary *barItemInfo = @{NSFontAttributeName : baseTitleFont, NSForegroundColorAttributeName:[UIColor whiteColor]};</p>

<p>// UILabel
[[UILabel appearance] setFont:baseInputFont];</p>

<p>// UINavigationBar
[[UINavigationBar appearance] setTitleTextAttributes:barItemInfo];
[[UINavigationBar appearance] setBarTintColor:[UIColor colorWithRed:0.2 green:0.6 blue:0.86 alpha:1]];</p>

<p>// UINavigationBarItem
[[UIBarButtonItem appearance] setTitleTextAttributes:barItemInfo forState:UIControlStateNormal];</p>

<p>// UITextField
[[UITextField appearance] setFont:baseInputFont];</p>

<p>// UITextView
[[UITextView appearance] setFont:baseInputFont];
```</p>

<h2>参考</h2>

<ul>
<li><a href="http://dev.classmethod.jp/smartphone/iphone/uifont-packagesetup/">http://dev.classmethod.jp/smartphone/iphone/uifont-packagesetup/</a></li>
<li><a href="http://qiita.com/yimajo/items/a7ed557d382077498181">http://qiita.com/yimajo/items/a7ed557d382077498181</a></li>
<li><a href="http://seesaakyoto.seesaa.net/article/366291271.html">http://seesaakyoto.seesaa.net/article/366291271.html</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ViewControllerでアプリの状態を検知する]]></title>
    <link href="http://mzgk.github.io/blog/2014/viewcontroller-notification/"/>
    <updated>2014-08-08T15:52:13+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/viewcontroller-notification</id>
    <content type="html"><![CDATA[<p>ViewControllerで、バックグラウンドから復帰した際の処理をしたかったが、検知できる方法がAppDelegate.mの <code>applicationWillEnterForeground:</code> 以外に思いつかなかったので調査。<br/>
結果としては、ViewControllerでもアプリの状態を検知する方法があった。</p>

<h2>通知を利用する</h2>

<p>ViewController.mの <code>viewWillAppear</code> などに、通知を追加しておく。</p>

<h3>追加</h3>

<p>```objective-c
&ndash; (void)viewWillAppear:(BOOL)animated</p>

<pre><code>// UIApplicationDidBecomeActiveNotification：アクティブになったとき
// applicationDidBecomeActive（自作）メソッドを呼ぶ
[[NSNotificationCenter defaultCenter] addObserver:self 
                                         selector:@selector(applicationDidBecomeActive) 
                                             name:UIApplicationDidBecomeActiveNotification 
                                           object:nil];
</code></pre>

<p>}
```</p>

<h3>削除</h3>

<p>```objective-c
&ndash; (void)viewWillDisappear:(BOOL)animated
{</p>

<pre><code>// 通知の削除
[[NSNotificationCenter defaultCenter] removeObserver:self];
</code></pre>

<p>}
```</p>

<h2>状態一覧</h2>

<p>UIApplicationのNotifications一覧</p>

<h3>ライフサイクル系</h3>

<ul>
<li>UIApplicationDidFinishLaunchingNotification

<ul>
<li>アプリケーションが起動した直後に通知</li>
</ul>
</li>
<li>UIApplicationWillEnterForegroundNotification

<ul>
<li>アプリケーションがアクティブになる直前に通知</li>
</ul>
</li>
<li>UIApplicationDidBecomeActiveNotification

<ul>
<li>アプリケーションがアクティブになった時に通知</li>
</ul>
</li>
<li>UIApplicationDidEnterBackgroundNotification

<ul>
<li>アプリケーションがバックグラウンドに入る時に通知</li>
</ul>
</li>
<li>UIApplicationWillResignActiveNotification

<ul>
<li>アプリケーションがアクティブで無くなる直前に通知。通知アラートが表示される時などにも通知される</li>
</ul>
</li>
<li>UIApplicationWillTerminateNotification

<ul>
<li>アプリケーションが終了される直前に通知</li>
</ul>
</li>
</ul>


<h3>サイズ変更系</h3>

<ul>
<li>UIApplicationWillChangeStatusBarFrameNotification

<ul>
<li>ステータスバーのサイズ変更される直前に通知</li>
</ul>
</li>
<li>UIApplicationDidChangeStatusBarFrameNotification

<ul>
<li>ステータスバーのサイズ変更が発生した時に通知。デバイスが回転した時など</li>
</ul>
</li>
<li>UIApplicationWillChangeStatusBarOrientationNotification

<ul>
<li>デバイスの向きが変わる直前に通知</li>
</ul>
</li>
<li>UIApplicationDidChangeStatusBarOrientationNotification

<ul>
<li>デバイスの向きが変わった後に通知</li>
</ul>
</li>
</ul>


<h3>その他</h3>

<ul>
<li>UIApplicationDidReceiveMemoryWarningNotification

<ul>
<li>メモリ不足の警告発生時に通知</li>
</ul>
</li>
<li>UIApplicationProtectedDataDidBecomeAvailable

<ul>
<li>保護されたファイルへコードからアクセスが可能になった時に通知</li>
</ul>
</li>
<li>UIApplicationProtectedDataWillBecomeUnavailable

<ul>
<li>保護されたファイルへコードからアクセス出来なくなる前に通知</li>
</ul>
</li>
<li>UIApplicationSignificantTimeChangeNotification

<ul>
<li>時間に大きな変更が有った場合に通知。日付が変わった時や夏時間に変更など</li>
</ul>
</li>
</ul>


<h2>参考</h2>

<ul>
<li><a href="http://qiita.com/hkomo746/items/22fcecfd0773023ed56a">http://qiita.com/hkomo746/items/22fcecfd0773023ed56a</a></li>
<li><a href="http://d.hatena.ne.jp/nakamura001/20111107/1320680842">http://d.hatena.ne.jp/nakamura001/20111107/1320680842</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
