<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Objective-C | jubilee]]></title>
  <link href="http://mzgk.github.io/blog/categories/objective-c/atom.xml" rel="self"/>
  <link href="http://mzgk.github.io/"/>
  <updated>2014-08-05T17:59:11+09:00</updated>
  <id>http://mzgk.github.io/</id>
  <author>
    <name><![CDATA[mzgk]]></name>
    <email><![CDATA[mzgkworks@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UITableViewのセルのハイライト制御]]></title>
    <link href="http://mzgk.github.io/blog/2014/cell-highlight/"/>
    <updated>2014-08-05T17:49:14+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/cell-highlight</id>
    <content type="html"><![CDATA[<p>セルをタップして詳細画面に遷移した後に、戻ってきた時、タップしたセルのハイライトが残っている。<br/>
このハイライトを消す方法。<br/>
UITableViewControllerを使用しているぶんには、特に意識する必要はない。</p>

<h2>UITableViewControllerを継承してUITableViewを使う場合</h2>

<p>UITableViewControllerのviewWillAppear:にはハイライト解除の処理が定義してある。<br/>
なので、viewWillAppear:メソッドをオーバーライドするときは、必ず親クラスのviewWillAppear:メソッドを呼ぶこと。</p>

<p><code>objective-c
- (void)viewWillAppear:(BOOL)animated
{
  // 必ずこれを呼ぶこと
  [super viewWillAppear:animated];
}
</code></p>

<h2>UITableViewControllerを継承せずにUITableViewを使う場合</h2>

<p>自分で実装すること。</p>

<p><code>objective-c
- (void)viewWillAppear:(BOOL)animated
{
  [super viewWillAppear:animated];
  // ハイライト解除
  [_tableView deselectRowAtIndexPath:[_tableView indexPathForSelectedRow] animated:YES];
}
</code></p>

<h2>参考</h2>

<p><a href="http://d.hatena.ne.jp/glass-_-onion/20090324/1237864499">http://d.hatena.ne.jp/glass-_-onion/20090324/1237864499</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableViewのセル編集をさせない方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/not-allowed-to-edit-cell/"/>
    <updated>2014-08-05T17:42:38+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/not-allowed-to-edit-cell</id>
    <content type="html"><![CDATA[<p>セルスワイプでの削除をやめる方法。<br/>
セルの編集を許可するかどうかを返すメソッドでNOを返す。</p>

<p>```objective-c
&ndash; (BOOL)tableView:(UITableView <em>)tableView canEditRowAtIndexPath:(NSIndexPath </em>)indexPath
{</p>

<pre><code>// Return NO if you do not want the specified item to be editable.
// TODO: セル削除を可能にする時はYESに変更すること
return NO;
</code></pre>

<p>}
```</p>

<p>もしくは、以下のメソッドをコメントアウト。</p>

<p>```objective-c
&ndash; (void)tableView:(UITableView <em>)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath </em>)indexPath
{</p>

<pre><code>if (editingStyle == UITableViewCellEditingStyleDelete) {
    [_objects removeObjectAtIndex:indexPath.row];
    [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationFade];
} else if (editingStyle == UITableViewCellEditingStyleInsert) {
    // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view.
}
</code></pre>

<p>}
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アプリのデータをiTunesで共有する方法]]></title>
    <link href="http://mzgk.github.io/blog/2014/share-itunes/"/>
    <updated>2014-08-05T17:11:29+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/share-itunes</id>
    <content type="html"><![CDATA[<p>アプリ内のデータをiTunesから取得したり、追加したりする際の設定方法。<br/>
デバイスをiTunesに接続し、上のAppタブを選択、ファイル共有で対象のアプリを選択すると、共有できるファイルが表示される。</p>

<h2>Supporting Files</h2>

<ul>
<li>｛アプリ名｝-Info.plistを開く</li>
<li>Information Property Listの隣の＋をクリックし、行を追加</li>
<li>Application supports iTunes file sharingを選択</li>
<li>値のYESを選択</li>
</ul>


<p><img src="/images/2014/0805/iTunes_1.png" alt="iTunes共有1" /></p>

<p>参考：
<a href="http://qiita.com/SolaRayLino/items/8a4eb1821559122b4cbf">http://qiita.com/SolaRayLino/items/8a4eb1821559122b4cbf</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アプリのバージョン取得]]></title>
    <link href="http://mzgk.github.io/blog/2014/get-app-version/"/>
    <updated>2014-08-05T17:07:29+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/get-app-version</id>
    <content type="html"><![CDATA[<p>ソース内でアプリのバージョンを取得する方法。</p>

<p>```objective-c
// バージョン：TARGET- General &ndash; Identity &ndash; Version（Info.plist : Bundle version strings short）
NSString *version = [[NSBundle mainBundle]infoDictionary][@&ldquo;CFBundleShortVersionString&rdquo;];</p>

<p>// バンドル：TARGET- General &ndash; Identity &ndash; Bundle（Info.plist : Bundle version）
NSString *bundle = [[NSBundle mainBundle]infoDictionary][@&ldquo;CFBundleVersion&rdquo;];
```</p>

<p>VersionとBundleの違いについては、理解不足。</p>

<ul>
<li>Version

<ul>
<li>表記用のリリースバージョン</li>
</ul>
</li>
<li>Bundle

<ul>
<li>内部開発用のビルドバージョン</li>
</ul>
</li>
</ul>


<p>とのことみたいだが、リリース時は両方が一致している必要があるらしいとのこと。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[カテゴリファイルの作り方]]></title>
    <link href="http://mzgk.github.io/blog/2014/make-category/"/>
    <updated>2014-08-05T16:49:30+09:00</updated>
    <id>http://mzgk.github.io/blog/2014/make-category</id>
    <content type="html"><![CDATA[<p>カテゴリファイルを作る際の命名方法。<br/>
カテゴリーファイルを選択して、</p>

<p><img src="/images/2014/0805/Category.png" alt="Xcode" /></p>
]]></content>
  </entry>
  
</feed>
